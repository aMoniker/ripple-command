'use strict';

const _ = require('lodash');
const program = require('commander');
const {Util} = require('ripple-command/util');
const {Command} = require('ripple-command/command');

program
    .command('get-paths <source-address> <destination-address> <destination-amount>')

    .description('Finds paths to send a payment. Paths are options for how to route a payment.')

    .option('--source-amount <amount>',
        'The amount of funds to send. Should be in the format `<currency-code>:<value>[:<counter-party>]` i.e. `XRP:100` or `USD:r1PpLeAdDrEsS0fC0uNtErPaRtY:1337`')

    .option('--currencies <code>',
        'A currency code (with optional counterparty) that may be used in the payment paths. It should be in the format of `<currency-code>:<counterparty-address>` or simply `<currency-code>` if there is no counterparty. This option can be repeated multiple times.', Command.collectOption)

    .action(Command.actionHandler({
        apiCall: 'getPaths',
        customMapping: (apiArguments) => {
            var pathfind = {
                source: {
                    address: apiArguments.shift(),
                },
                destination: {
                    address: apiArguments.shift(),
                    amount: Util.parseAmount(apiArguments.shift()),
                },
            };

            var options = apiArguments[0];

            _.each(options, (value, key) => {
                switch (key) {
                    case 'sourceAmount':
                        pathfind.source.amount = Util.parseAmount(value);
                        break;
                    case 'currencies':
                        pathfind.source.currencies = value.map(Util.parseAmount);
                        break;
                    default: break;
                }
            });

            return pathfind;
        }
    }))
;
