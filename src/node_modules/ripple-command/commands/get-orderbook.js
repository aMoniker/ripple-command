'use strict';

const _ = require('lodash');
const program = require('commander');
const {Util} = require('ripple-command/util');
const {Command} = require('ripple-command/command');

program
    .command('get-orderbook <address> <base> <counter>')
    .description('Returns open orders for the specified account. Open orders are orders that have not yet been fully executed and are still in the order book. <base> & <counter> should be in the format of currency:counterparty, or just currency if it\'s XRP')
    .option('--ledger-version <int>', 'Return orders as of this historical ledger version.')
    .option('--limit <int>', 'Return at most this many orders.')
    .action(Command.actionHandler({
        apiCall: 'getOrderbook',
        optionsMap: {
            'int': ['limit', 'ledgerVersion'],
        },
        customMapping: (apiArguments) => {
            var options = apiArguments.pop();
            var counter = apiArguments.pop();
            var base = apiArguments.pop();

            var orderbook = {
                base: Util.parseAmount(base),
                counter: Util.parseAmount(counter),
            };

            apiArguments.push(orderbook);
            apiArguments.push(options);
            return apiArguments;
        }
    }))
    ;
