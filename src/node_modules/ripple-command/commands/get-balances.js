'use strict';

var _ = require('lodash');
var program = require('commander');
var {Config} = require('ripple-command/config');
var {Console} = require('ripple-command/console');
var {RippleWrapper} = require('ripple-command/api/ripple-wrapper');

program
    .command('get-balances <address>')
    .description('Returns balances for a specified account.')
    .option('--counterparty <address>', 'Only return balances with this counterparty.')
    .option('--currency <currency>', 'Only return balances for this currency.')
    .option('--ledger-version <int>', 'Return balances as they were in this historical ledger version.')
    .option('--limit <int>', 'Return at most this many balances.')
    .action(function(address, command) {
        let opts = command.opts();
        Config.absorb(program.opts(), opts);

        let options = _.pickBy(opts, (value) => {
            return value !== undefined;
        });

        for (let intOpt of ['limit', 'ledgerVersion']) {
            if (options[intOpt]) {
                options[intOpt] = parseInt(options[intOpt], 10);
            }
        }

        (new RippleWrapper()).invoke('getBalances', address, options).then((balances) => {
            Console.out('Balances:');
            Console.out(balances, 1);
        }).catch(_.noop);
    })
    ;
