'use strict';

class Util {

    /**
     * Parse a string representing an amount into a ripple-api Amount object.
     *
     * See https://github.com/ripple/ripple-lib/blob/develop/docs/index.md#amount
     * for the object specification.
     *
     * The string should be in the format:
     *     `<currency>[:<counterparty>][:<amount>]`
     *
     * <currency> is a three-character or hexadecimal currency code.
     * <counterparty> is an optional ripple address of the counterparty.
     * <amount> is a string representation of a floating point number.
     *
     * Both or either of the counterparty and amount can be omitted,
     * but must be passed in the order shown above.
     *
     * @param  {string} amountString
     * @return {object}
     */
    static parseAmount(amountString) {
        let amount = {};
        let parts = amountString.split(':');

        amount.currency = parts[0];
        if (parts[1]) {
            if (parts[1].substr(0, 1) === 'r') {
                amount.counterparty = parts[1];
            } else {
                amount.value = parts[1];
            }
        }

        if (parts[2] && !amount.value) {
            amount.value = parts[2];
        }

        return amount;
    }

}

module.exports = {
    Util
};
